{"ast":null,"code":"var _jsxFileName = \"/Users/petercarmichael/codefellows/401/labs/401lab29/src/components/form.js\";\nimport React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      person: '',\n      list: [],\n      nextId: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    }); // console.log(this.state.value);\n  }\n\n  handleChange2(event) {\n    this.setState({\n      person: event.target.person\n    });\n    console.log(this.state.person);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let joinedArray = this.state.list.concat({\n      id: this.state.nextId,\n      value: this.state.value,\n      person: this.state.person\n    });\n    console.log(joinedArray);\n    this.setState({\n      list: joinedArray\n    });\n    this.setState({\n      nextId: this.state.nextId + 1\n    });\n  }\n\n  handleEdit(id) {\n    this.setState(state => {\n      const list = state.list.map(item => {\n        if (item.id === id) {\n          item.contentEditable = true;\n        }\n\n        return item;\n      });\n      return {\n        list\n      };\n    });\n  }\n\n  handleDelete(id) {\n    this.setState(state => {\n      const list = state.list.filter(item => item.id !== id);\n      return {\n        list\n      };\n    });\n  }\n\n  handleClick(id) {\n    this.setState(state => {\n      const list = state.list.map(item => {\n        if (item.id === id) {\n          item.completed = true;\n        }\n\n        return item;\n      });\n      return {\n        list\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      person: this.state.person,\n      onChange: this.handleChange2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Click to add to the List!\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.list.map(data => {\n      return React.createElement(\"li\", {\n        key: data.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: data.completed ? 'completed' : null,\n        contentEditable: data.contentEditable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, data.value), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.handleClick(data.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Mark as Completed\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.handleEdit(data.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Edit Your Item\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.handleDelete(data.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Delete Task\"));\n    })));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/petercarmichael/codefellows/401/labs/401lab29/src/components/form.js"],"names":["React","Form","Component","constructor","props","state","value","person","list","nextId","handleChange","bind","handleChange2","handleSubmit","handleClick","handleDelete","event","setState","target","console","log","preventDefault","joinedArray","concat","id","handleEdit","map","item","contentEditable","filter","completed","render","data"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', person: '', list: [], nextId: 0 };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n    // console.log(this.state.value);\n  }\n  handleChange2(event) {\n    this.setState({ person: event.target.person });\n    console.log(this.state.person);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let joinedArray = this.state.list.concat({\n      id: this.state.nextId,\n      value: this.state.value,\n      person: this.state.person\n    });\n    console.log(joinedArray);\n    this.setState({ list: joinedArray });\n    this.setState({ nextId: this.state.nextId + 1 });\n  }\n\n  handleEdit(id) {\n    this.setState(state => {\n      const list = state.list.map(item => {\n        if (item.id === id) {\n          item.contentEditable = true;\n        }\n        return item;\n      });\n      return {\n        list\n      };\n    });\n  }\n\n  handleDelete(id) {\n    this.setState(state => {\n      const list = state.list.filter(item => item.id !== id);\n      return {\n        list\n      };\n    });\n  }\n\n  handleClick(id) {\n    this.setState(state => {\n      const list = state.list.map(item => {\n        if (item.id === id) {\n          item.completed = true;\n        }\n        return item;\n      });\n      return {\n        list\n      };\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label>\n            <input\n              type=\"text\"\n              person={this.state.person}\n              onChange={this.handleChange2}\n            />\n          </label>\n          <button type=\"submit\">Click to add to the List!</button>\n        </form>\n        <ul>\n          {this.state.list.map(data => {\n            return (\n              <li key={data.id}>\n                <p\n                  className={data.completed ? 'completed' : null}\n                  contentEditable={data.contentEditable}\n                >\n                  {data.value}\n                </p>\n                <button type=\"button\" onClick={() => this.handleClick(data.id)}>\n                  Mark as Completed\n                </button>\n                <button type=\"button\" onClick={() => this.handleEdit(data.id)}>\n                  Edit Your Item\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => this.handleDelete(data.id)}\n                >\n                  Delete Task\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}